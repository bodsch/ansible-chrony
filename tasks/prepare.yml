---

- name: include OS specific configuration
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian
        - "{{ ansible_os_family | lower }}.yml"
        # artixlinux
        - "{{ ansible_os_family | lower | replace(' ', '') }}.yml"
        - default.yml
      skip: true

- name: update package cache
  ansible.builtin.package:
    update_cache: true

- name: install dependencies
  ansible.builtin.package:
    name: "{{ chrony_dependencies }}"
    state: present
  when:
    - chrony_dependencies | default([]) | count > 0

- name: merge chrony configuration between defaults and custom
  ansible.builtin.set_fact:
    chrony_service: "{{ chrony_defaults_service | combine(chrony_service, recursive=True) }}"
    chrony_config: "{{ chrony_defaults_config | combine(chrony_config, recursive=True) }}"
    chrony_daemon_args: "{{ chrony_defaults_daemon_args | combine(chrony_daemon_args, recursive=True) }}"

...
